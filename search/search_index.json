{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"P\u00e1gina de Gerardo","text":"<p>Bienvenido \ud83d\udc4b Esta es una p\u00e1gina para documentar mi progreso en la carrera</p> <p>Con\u00f3ceme</p>"},{"location":"aboutme/","title":"CON\u00d3CEME","text":"<p>Soy Gerardo Esquivel de Luna, tengo 18 a\u00f1os y estudio Ingenier\u00eda Mecatr\u00f3nica en la IBERO Puebla. Hice esta p\u00e1gina para ir guardando lo que voy aprendiendo en la carrera, mis proyectos y todo el proceso de mi aprendizaje.</p> <p>Fuera de clases me gusta mucho el ciclismo de monta\u00f1a, el alpinismo y en general estar en contacto con la naturaleza. Tambi\u00e9n disfruto salir con mis amigos y conocer lugares nuevos, creo que eso me ayuda a despejarme y a ver las cosas de otra manera.</p> <p>Me considero alguien curioso, al que le gusta aprender y vivir experiencias distintas. Con esta secci\u00f3n quiero compartir un poco de mi lado profesional, pero tambi\u00e9n algo personal, para que quien la lea me conozca mejor y vea lo que voy construyendo en el camino.</p> <p>Contacto: 204655@iberopuebla.mx (institucional)</p>"},{"location":"controlmotores/","title":"Actividades: Control de Motores DC con ESP32 y Puente H","text":""},{"location":"controlmotores/#practica-1-control-de-direccion-de-un-motor-dc-con-esp32-y-puente-h","title":"Pr\u00e1ctica 1: Control de direcci\u00f3n de un motor DC con ESP32 y puente H","text":"<p>Equipo: Gerardo Esquivel de Luna, Jos\u00e9 Ismael Guerrero Rom\u00e1n.</p> <p>Fecha: 03/10/25</p> <p>Descripci\u00f3n: Se us\u00f3 un ESP32 y un puente H (L298N) para controlar un motor DC, haciendo que girara hacia adelante y hacia atr\u00e1s, con peque\u00f1as pausas entre cada cambio de direcci\u00f3n.</p>"},{"location":"controlmotores/#objetivos","title":"Objetivos:","text":"<ul> <li>General: Controlar el giro de un motor DC usando un puente H conectado al ESP32.</li> <li>Configurar los pines del ESP32 como salidas digitales.</li> <li>Programar el control de sentido (adelante/atr\u00e1s).</li> <li>Implementar pausas de parada entre los cambios de direcci\u00f3n.</li> </ul>"},{"location":"controlmotores/#requisitos","title":"Requisitos:","text":"<p>Software:  - Arduino IDE 2.x o superior. - Librer\u00eda ESP32.</p> <p>Hardware: - ESP32 DevKit. - Puente H L298N. - Motor DC de 6 V. - Fuente externa de 6 V. - Cables Dupont / protoboard.</p>"},{"location":"controlmotores/#codigo","title":"C\u00f3digo:","text":"<pre><code>#define in1 27\n#define in2 14\n\nvoid setup() {\n  /* Declarar pines como salida */\n  pinMode(in1, OUTPUT);\n  pinMode(in2, OUTPUT);\n}\n\nvoid loop() {\n  /* ADELANTE */\n  digitalWrite(in1, LOW);\n  digitalWrite(in2, HIGH);\n  delay(1000);\n\n  /* ALTO */\n  digitalWrite(in1, LOW);\n  digitalWrite(in2, LOW);\n  delay(1000);\n\n  /* ATR\u00c1S */\n  digitalWrite(in1, HIGH);\n  digitalWrite(in2, LOW);\n  delay(1000);\n\n  /* ALTO */\n  digitalWrite(in1, LOW);\n  digitalWrite(in2, LOW);\n  delay(1000);\n}\n</code></pre>"},{"location":"controlmotores/#video","title":"Video","text":""},{"location":"controlmotores/#practica-2-control-de-potencia-de-un-motor-dc-con-esp32-y-pwm","title":"Pr\u00e1ctica 2: Control de potencia de un motor DC con ESP32 y PWM","text":"<p>Equipo: Gerardo Esquivel de Luna, Jos\u00e9 Ismael Guerrero Rom\u00e1n.</p> <p>Fecha: 10/10/25</p> <p>Descripci\u00f3n: Se us\u00f3 un ESP32 junto con un puente H (L298N) con una fuente de 6 V para controlar la velocidad de un motor DC usando PWM, haciendo que su potencia bajara poco a poco del m\u00e1ximo al m\u00ednimo.</p>"},{"location":"controlmotores/#objetivos_1","title":"Objetivos:","text":"<ul> <li>General: Ajustar la velocidad de un motor DC usando se\u00f1ales PWM que salen del ESP32.</li> <li>Configurar un canal PWM en el ESP32 con la frecuencia y resoluci\u00f3n adecuadas.</li> <li>Implementar un programa que incremente y luego disminuya la velocidad del motor.</li> <li>Observar y analizar la respuesta del motor ante los diferentes niveles de potencia.</li> </ul>"},{"location":"controlmotores/#requisitos_1","title":"Requisitos:","text":"<p>Software:  - Arduino IDE 2.x o superior. - Librer\u00eda del ESP32 instalada desde el Gestor de Placas.</p> <p>Hardware: - ESP32 DevKit. - Puente H L298N. - Motor DC de 6 V. - Fuente externa de 6 V. - Protoboard y cables Dupont.</p>"},{"location":"controlmotores/#codigo_1","title":"C\u00f3digo:","text":"<pre><code>#define IN1 27\n#define IN2 14\n#define PWM_PIN 12\n\n// Configuraci\u00f3n del canal PWM\n#define PWM_CHANNEL 0\n#define PWM_FREQ 1000   // Frecuencia de 1 kHz\n#define PWM_RES 8       // Resoluci\u00f3n de 8 bits (valores 0 a 255)\n\nvoid setup() {\n  /* Configurar pines de salida */\n  pinMode(IN1, OUTPUT);\n  pinMode(IN2, OUTPUT);\n\n  /* Configurar canal PWM */\n  ledcSetup(PWM_CHANNEL, PWM_FREQ, PWM_RES);\n\n  /* Asociar el pin f\u00edsico al canal PWM */\n  ledcAttachPin(PWM_PIN, PWM_CHANNEL);\n}\n\nvoid loop() {\n  /* GIRO HACIA ADELANTE */\n  digitalWrite(IN1, LOW);\n  digitalWrite(IN2, HIGH);\n\n  /* Aumentar gradualmente la velocidad */\n  for (int i = 0; i &lt;= 255; i++) {\n    ledcWrite(PWM_CHANNEL, i);\n    delay(10);  // Aumento progresivo\n  }\n\n  /* Mantener velocidad m\u00e1xima */\n  delay(1000);\n\n  /* Disminuir gradualmente la velocidad */\n  for (int i = 255; i &gt;= 0; i--) {\n    ledcWrite(PWM_CHANNEL, i);\n    delay(10);  // Disminuci\u00f3n progresiva\n  }\n\n  /* Detener el motor */\n  digitalWrite(IN1, LOW);\n  digitalWrite(IN2, LOW);\n  delay(1000);\n}\n</code></pre>"},{"location":"controlmotores/#video_1","title":"Video:","text":""},{"location":"ledesp32/","title":"Control de LED con ESP32 (bot\u00f3n, Bluetooth e intervalos)","text":"<p>Equipo: Gerardo Esquivel de Luna, Jos\u00e9 Ismael Guerrero Rom\u00e1n.</p> <p>Fecha: 19/09/25</p> <p>Descripci\u00f3n: Se program\u00f3 un ESP32 para controlar un LED de tres formas: con un bot\u00f3n, por comandos v\u00eda Bluetooth y haciendo que parpadeara solo a intervalos de tiempo definidos.</p>"},{"location":"ledesp32/#objetivos","title":"Objetivos:","text":"<ul> <li>General: Probar distintas formas de controlar un LED con el ESP32 usando un bot\u00f3n, comunicaci\u00f3n inal\u00e1mbrica y programaci\u00f3n de parpadeo.</li> <li>Programar el ESP32 para que un bot\u00f3n controle el encendido y apagado inmediato del LED.</li> <li>Configurar la comunicaci\u00f3n Bluetooth del ESP32 para que el LED responda a comandos enviados desde la terminal (\"on\" y \"off\").</li> <li>Implementar un programa que haga parpadear el LED en intervalos de tiempo definidos.</li> <li>Documentar con fotograf\u00edas y videos el c\u00f3digo y el funcionamiento de cada caso.</li> </ul>"},{"location":"ledesp32/#requisitos","title":"Requisitos:","text":"<p>Software: - Arduino IDE con soporte para ESP32. - Librer\u00edas necesarias para comunicaci\u00f3n Bluetooth. - Monitor serie o aplicaci\u00f3n de terminal Bluetooth.</p> <p>Hardware: - ESP 32. - LED +  resistencia limitadora (330 \u03a9 a 820 \u03a9). - Pulsador (bot\u00f3n). - Protoboard y cables de conexi\u00f3n. - Fuente de alimentaci\u00f3n USB (5V).</p>"},{"location":"ledesp32/#programas-esp32-control-de-led","title":"Programas ESP32: Control de LED","text":""},{"location":"ledesp32/#control-por-boton","title":"Control por Bot\u00f3n:","text":"<p>Encender y apagar con un bot\u00f3n f\u00edsico. <pre><code>const int led = 33;\nconst int btn = 27;\n\nvoid setup() {\n  Serial.begin(115200);\n  pinMode(led, OUTPUT);\n  pinMode(btn, INPUT);\n}\n\nvoid loop() {\n  int estado = digitalRead(btn);\n  if (estado == 1) {\n    digitalWrite(led, 1);  // LED encendido mientras el bot\u00f3n est\u00e9 presionado\n  } else {\n    digitalWrite(led, 0);  // LED apagado cuando no se presiona\n  }\n}\n</code></pre></p>"},{"location":"ledesp32/#control-solo-por-esp-32-intervalos-de-parpadeo","title":"Control solo por ESP 32 (intervalos de parpadeo):","text":"<p>Encender y apagar mediante c\u00f3digo, en intervalos. <pre><code>const int led = 33;\n\nvoid setup() {\n  pinMode(led, OUTPUT);\n}\n\nvoid loop() {\n  digitalWrite(led, HIGH);  // LED encendido\n  delay(2000);              // Espera 2 segundos\n  digitalWrite(led, LOW);   // LED apagado\n  delay(2000);              // Espera 2 segundos\n}\n</code></pre></p>"},{"location":"ledesp32/#control-por-bluetooth","title":"Control por Bluetooth:","text":"<p>Control del led escribiendo en una consola conectada por Bluetooth <pre><code>#include \"BluetoothSerial.h\"\nBluetoothSerial SerialBT;\n\nconst int led = 33;\n\nvoid setup() {\n  Serial.begin(115200);\n  SerialBT.begin(\"ESP32-de-los-PAPITOS\"); // Nombre del dispositivo Bluetooth\n  pinMode(led, OUTPUT);\n}\n\nvoid loop() {\n  if (SerialBT.available()) {\n    String mensaje = SerialBT.readString();\n    Serial.println(\"Recibido: \" + mensaje);\n\n    if (mensaje == \"on\") {\n      digitalWrite(led, 1);   // LED encendido por comando\n    } \n    else if (mensaje == \"off\") {\n      digitalWrite(led, 0);   // LED apagado por comando\n    }\n  }\n  delay(1000);\n}\n</code></pre></p>"},{"location":"osciloscopio/","title":"Actividad: Circuito con osciloscopio","text":""},{"location":"osciloscopio/#led-intermitente-con-temporizador-555-en-modo-astable","title":"LED intermitente con temporizador 555 en modo astable","text":"<p>Equipo: Gerardo Esquivel de Luna, Jos\u00e9 Ismael Guerrero Rom\u00e1n</p> <p>Fecha: 06/09/25</p> <p>Descripci\u00f3n: Se hizo un circuito astable con el temporizador 555 para que un LED parpadeara, pudiendo ajustar el timepo entre 1 y 5 segundos. Todo se bas\u00f3 en conceptos de electr\u00f3nica anal\u00f3gica.</p>"},{"location":"osciloscopio/#objetivos","title":"Objetivos:","text":"<p>Armar un circuito con el temporizador 555 en modo astable para hacer que un LED parpadee, pudiendo camboar el tiempo de parpadeo.</p>"},{"location":"osciloscopio/#requisitos","title":"Requisitos:","text":"<ul> <li> <p>Software: No fue necesario usar ning\u00fan software, solo una calculadora b\u00e1sica para sacar los valores de los componentes.</p> </li> <li> <p>Hardware:</p> </li> <li>CI NE555 (temporizador).</li> <li>Resistencia R1 = 1 k\u03a9.</li> <li>Resistencia R2 = 6.8 k\u03a9 + potenci\u00f3metro de 30 k\u03a9.</li> <li>Capacitor electrol\u00edtico C = 100 \u00b5F.</li> <li>Resistencia limitadora para LED (330 \u03a9 a 820 \u03a9 seg\u00fan Vcc).</li> <li>LED rojo.</li> <li>Protoboard y cables de conexi\u00f3n.</li> <li>Fuente de poder de 5 V o 9 V.</li> </ul>"},{"location":"osciloscopio/#_1","title":"Circuito con Osciloscopio","text":""},{"location":"presentacion/","title":"Presentacion del equipo","text":""},{"location":"presentacion/#nosotros-somos","title":"NOSOTROS SOMOS","text":""},{"location":"presentacion/#gerardo-esquivel","title":"Gerardo Esquivel","text":""},{"location":"presentacion/#_1","title":"Equipo de trabajo","text":"<ul> <li> <p>Carrera: Ing. Mecatr\u00f3nica</p> </li> <li> <p>De donde vengo: Soy de Puebla</p> </li> <li> <p>Cosas que me gustan: Bicicleta, videojuegos, monta\u00f1ismo, animales</p> </li> <li> <p>Algo de lo que estoy orgulloso: Ser una persona perseverante, que no se rinde f\u00e1cilmente, por haber superado momentos dif\u00edciles y seguir avanzando y por ser alguien que ayuda a los dem\u00e1s cuando lo necesitan</p> </li> <li> <p>Edad: 18 a\u00f1os</p> </li> <li> <p>Cumplea\u00f1os: 18 de julio</p> </li> <li> <p>Contacto: 204655@iberopuebla.mx (institucional)</p> </li> </ul>"},{"location":"presentacion/#ismael-guerrero","title":"Ismael Guerrero","text":""},{"location":"presentacion/#_2","title":"Equipo de trabajo","text":"<ul> <li> <p>Carrera:Ing. Mecatr\u00f3nica</p> </li> <li> <p>De donde vengo: Soy de Puebla</p> </li> <li> <p>Cosas que me gustan: Videojuegos, m\u00fasica, formula 1, tecnolog\u00eda</p> </li> <li> <p>Algo de lo que estoy orgulloso: De como he crecido como persona y como a pesar de mis errores y aciertos en la vida he podido levantarme y aprender, tambien de las personas que me rodean y como he podido influir positivamente en ellos, tambien estoy orgulloso de haber tenido una buena trayectoria academica y de poder seguir estudiando</p> </li> <li> <p>Edad: 18 a\u00f1os</p> </li> <li> <p>Cumplea\u00f1os: 23 de julio</p> </li> <li> <p>Contacto: 203563@iberopuebla.mx</p> </li> </ul>"}]}